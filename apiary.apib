FORMAT: 1A

# Odbav.to

## Login [/login]
### Exchange credentials for access token [POST]
+ Request (application/json)
    + Attributes (object)
        + `email`: `info@odbav.to` (string, required)
        + `password`: `secretpassword` (string, required)

+ Response 200 (application/json)
    + Attributes (object)
        + `token`: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ` (string)
        + `user` (User with client)
                    
+ Response 400 (application/json)
    + Attributes (400 Error response)



## Forgotten password [/forgotten-password]
### Request new password [POST]
+ Request (application/json)
    + Attributes (object)
        + `email`: `info@odbav.to`

+ Response 204 (application/json)

+ Response 400 (application/json)
    + Attributes (400 Error response)


## Registration [/sign-up]
### Create new client and associated user [POST]
+ Request (application/json)
    + Attributes (object)
        + `licenceType`: `a12b0231-be48-4d40-a69d-d521c159dae9`
        + `client` (Client)
        + `user` (User)
            + `password`: `secretpassword`

+ Response 201 (application/json)
    + Attributes (object)
        + `licence` (Licence with id)
        + `client` (Client with id)
        + `user` (User with id)

+ Response 400 (application/json)
    + Attributes (400 Error response)

<!--
## Translations [/translations]
### List of all translations [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (array)
        + (Translation)

+ Response 401 (application/json)
    + Attributes (401 Error response)
-->


## Licence types [/licence-types]
### List of all licence types [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (array)
        + (Licence type with details)

## Currencies [/currencies]
### List of supported currencies [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (array)
        + (Currency)

## Countries [/countries]
### List of supported countries [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (array)
        + (Country)

<!--
## Verify email [/verify-email]
### Verify email [POST]
+ Request (application/json)
    + Attributes (object)
        + `email`: `info@odbav.to`
        + `hash`: `4b68e41535b88a57870adfb6b8e99a4c`

+ Response 204 (application/json)

+ Response 400 (application/json)
    + Attributes (400 Error response)


## Resend verification email [/resend-verification-email]
### Resend verification email [POST]
+ Request (application/json)
    + Attributes (object)
        + `email`: `info@odbav.to`

+ Response 204 (application/json)

+ Response 400 (application/json)
    + Attributes (400 Error response)
-->

## Change password [/change-password]
### Change password [POST]
+ Request (application/json)
    + Attributes (object)
        + `oldPassword`: `secretpassword`
        + `newPassword`: `secretpassword`

+ Response 204 (application/json)

+ Response 400 (application/json)
    + Attributes (400 Error response)

+ Response 401 (application/json)
    + Attributes (401 Error response)


## Logged user [/me]
### Retrieve informations about itself [GET]
+ Request (application/json)
        
+ Response 200 (application/json)
    + Attributes (User with client)

+ Response 401 (application/json)
    + Attributes (401 Error response)


### Update user details [PUT]
+ Request (application/json)
    + Attributes (User)
            
+ Response 200 (application/json)
    + Attributes (User)

+ Response 400 (application/json)
    + Attributes (400 Error response)

+ Response 401 (application/json)
    + Attributes (401 Error response)


## Users [/users]
### List all users of same client [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (array)
        + (User with id)

+ Response 401 (application/json)
    + Attributes (401 Error response)

### Add new user to a client [POST]
+ Request (application/json)
    + Attributes (User)
        + `password` (nullable) - password will be generated automatically if null

+ Response 201 (application/json)
    + Attributes (User with id)
            
+ Response 400 (application/json)
    + Attributes (400 Error response)

+ Response 401 (application/json)
    + Attributes (401 Error response)

## Check in [/check-in]
### Check code for check in [POST]
+ Request (application/json)
    + Attributes (object)
        + `code`: `c084806e45e5` (string, required)

+ Response 201 (application/json)
    + Attributes (Ticket with id)

+ Response 400 (application/json)
    + Attributes (400 Error response)

+ Response 401 (application/json)
    + Attributes (401 Error response)


## Check out [/check-out]
### Check code for check out [POST]
+ Request (application/json)
    + Attributes (object)
        + `code`: `c084806e45e5` (string, required)

+ Response 201 (application/json)
    + Attributes (Ticket with id)

+ Response 400 (application/json)
    + Attributes (400 Error response)

+ Response 401 (application/json)
    + Attributes (401 Error response)


## Events [/events]
### List events [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (array)
        + (Event with id)

+ Response 401 (application/json)
    + Attributes (401 Error response)

### Create new event [POST]
+ Request (application/json)
    + Attributes (Event with variants)

+ Response 201 (application/json)
    + Attributes (Event with id and variants)

+ Response 400 (application/json)
    + Attributes (400 Error response)

+ Response 401 (application/json)
    + Attributes (401 Error response)


## Event detail [/events/{eventId}]
### Event detail [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (Event with id and variants)
        
+ Response 401 (application/json)
    + Attributes (401 Error response)
    
+ Response 404 (application/json)
    + Attributes (404 Error response)

### Edit event details [PUT]
+ Request (application/json)
    + Attributes (Event body)

+ Response 201 (application/json)
    + Attributes (Event with id)
        
+ Response 401 (application/json)
    + Attributes (401 Error response)
    
+ Response 404 (application/json)
    + Attributes (404 Error response)

### Delete event [DELETE]
+ Request (application/json)

+ Response 204 (application/json)

+ Response 401 (application/json)
    + Attributes (401 Error response)

+ Response 404 (application/json)
    + Attributes (400 Error response)


## Ticket variants [/events/{eventId}/ticket-variants]
### List event ticket variants [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (array)
        + (Ticket variant with id)

+ Response 401 (application/json)
    + Attributes (401 Error response)
    
+ Response 404 (application/json)
    + Attributes (404 Error response)

### Create new ticket variant [POST]
+ Request (application/json)
    + Attributes (Ticket variant)

+ Response 201 (application/json)
    + Attributes (Ticket variant with id)

+ Response 400 (application/json)
    + Attributes (400 Error response)

+ Response 401 (application/json)
    + Attributes (401 Error response)
    
+ Response 404 (application/json)
    + Attributes (404 Error response)

## Ticket variant detail [/ticket-variants/{ticketVariantId}]
### Ticket variant detail [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (Ticket variant with id)

+ Response 401 (application/json)
    + Attributes (401 Error response)
    
+ Response 404 (application/json)
    + Attributes (404 Error response)

### Edit ticket variant [PUT]
+ Request (application/json)
    + Attributes (Ticket variant)

+ Response 201 (application/json)
    + Attributes (Ticket variant with id)
        
+ Response 400 (application/json)
    + Attributes (400 Error response)

+ Response 401 (application/json)
    + Attributes (401 Error response)
    
+ Response 404 (application/json)
    + Attributes (404 Error response)

### Delete ticket variant [DELETE]
+ Request (application/json)

+ Response 204 (application/json)

+ Response 401 (application/json)
    + Attributes (401 Error response)

+ Response 404 (application/json)
    + Attributes (400 Error response)

## Tickets [/events/{eventId}/tickets]
### List event tickets [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (array)
        + (Ticket with id)

+ Response 401 (application/json)
    + Attributes (401 Error response)

+ Response 404 (application/json)
    + Attributes (404 Error response)

### Create new ticket [POST]
+ Request (application/json)
    + Attributes (object)
        + `guest` (Guest)
        + `ticket` (Order ticket)

+ Response 201 (application/json)
    + Attributes (Ticket with id)

+ Response 400 (application/json)
    + Attributes (400 Error response)

+ Response 401 (application/json)
    + Attributes (401 Error response)
    
+ Response 404 (application/json)
    + Attributes (404 Error response)

## Ticket detail [/tickets/{ticketId}]
### Ticket detail [GET]
+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (Ticket with id)

+ Response 401 (application/json)
    + Attributes (401 Error response)
    
+ Response 404 (application/json)
    + Attributes (404 Error response)

### Edit ticket [PUT]
+ Request (application/json)
    + Attributes (Ticket editation)
        
+ Response 201 (application/json)
    + Attributes (Ticket with id)

+ Response 400 (application/json)
    + Attributes (400 Error response)
    
+ Response 401 (application/json)
    + Attributes (401 Error response)
    
+ Response 404 (application/json)
    + Attributes (404 Error response)

### Delete ticket [DELETE]
+ Request (application/json)

+ Response 204 (application/json)

+ Response 401 (application/json)
    + Attributes (401 Error response)

+ Response 404 (application/json)
    + Attributes (400 Error response)    

## Orders [/orders]
### List orders [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (array)
        + (Order with id and ticket variant info)

+ Response 401 (application/json)
    + Attributes (401 Error response)
    
+ Response 404 (application/json)
    + Attributes (404 Error response)
    
### Create order [POST]
+ Request (application/json)
    + Attributes (Order)
        + `tickets` (array[Order ticket])

+ Response 201 (application/json)
    + Attributes (Order with id)

+ Response 400 (application/json)
    + Attributes (400 Error response)

+ Response 401 (application/json)
    + Attributes (401 Error response)
    

## Order detail [/orders/{orderId}]
### Order detail [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (Order with id and ticket variant info)

+ Response 400 (application/json)
    + Attributes (400 Error response)

+ Response 401 (application/json)
    + Attributes (401 Error response)
    
+ Response 404 (application/json)
    + Attributes (404 Error response)

### Edit order [PUT]
+ Request (application/json)
    + Attributes (Order)

+ Response 201 (application/json)
    + Attributes (Order with id)
        
+ Response 400 (application/json)
    + Attributes (400 Error response)

+ Response 401 (application/json)
    + Attributes (401 Error response)
    
+ Response 404 (application/json)
    + Attributes (404 Error response)

### Delete order [DELETE]
+ Request (application/json)

+ Response 204 (application/json)

+ Response 401 (application/json)
    + Attributes (401 Error response)

+ Response 404 (application/json)
    + Attributes (400 Error response)

## Company detail [/company/{companyId}]
### Company detail [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (Company)

+ Response 401 (application/json)
    + Attributes (401 Error response)
    
+ Response 404 (application/json)
    + Attributes (404 Error response)

## Billing detail [/billing]
### Billing detail [GET]
+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (Billing info)

+ Response 401 (application/json)
    + Attributes (401 Error response)
    
+ Response 404 (application/json)
    + Attributes (404 Error response)

### Edit billing [PUT]
+ Request (application/json)
    + Attributes (Billing info)

+ Response 201 (application/json)
    + Attributes (Billing info)
        
+ Response 400 (application/json)
    + Attributes (400 Error response)

+ Response 401 (application/json)
    + Attributes (401 Error response)
    
+ Response 404 (application/json)
    + Attributes (404 Error response)


## Order-form blank [/{eventId}/order-form]
### Post a new form created by user on current email [POST]
+ Request (application/json)
    + Attributes (object)
        + `fields` (array[Form type])
        + `email` (string)
        + `description` (string)
+ Response 204 (application/json)
    + Attributes (object)
        + `success`: `true`
+ Response 400 (application/json)
    + Attributes (400 Error response)


# Data Structures
## Licence type (object)
+ `id`: `962754c0-1201-4cd5-812f-ef616a442445`
+ `name`: `Basic`

## Licence type with details (Licence type)
+ `prices` (array[Price])

## Currency (object)
+ `code`: `CZK` (string)
+ `local`: `Kč` (string)

## Country (object)
+ `code`: `CZ`
+ `name`: `Česká Republika`
+ `internationalName`: `Czech Republic`
+ `currency`: `CZK`
+ `phoneCode`: `+420`

## Price (object)
+ `amount`: `100` (number)
+ `currency`: `CZK`

## Price 2 (object)
+ `amount`: `4` (number)
+ `currency`: `EUR`

## Licence (object)
+ `validUntil`: `2018-01-01 23:00:00`
+ `type` (Licence type)

## Licence with id (object)
+ `id`: `a12b0231-be48-4d40-a69d-d521c159dae9`
+ Include Licence

## User (object)
+ `email`: info@odbav.to
+ `firstName`: John
+ `lastName`: Doe
+ `currency`: EUR

## User with id (object)
+ `id`: `05f5b1a5-38be-4190-90cd-c084806e45e5`
+ Include User

## User with client (User with id)
+ `client` (Client with licence)

## Client id (object)
+ `id`: `aa32a9d3-9aaf-4b73-96ff-6da9cbdc8141`

## Client (object)
+ `name`: Odbav.to
+ include Billing info

## Client with id (object)
+ Include Client id
+ Include Client

## Client with licence (Client with id)
+ `licence` (Licence with id)

## Company (object)
+ `subjectId`: `28994124`
+ `subjectVatId`: `CZ12345678`
+ `subject`: `Velveth International Corporation s.r.o.`
+ `street`: `Slezská 1669/58`
+ `city`: `Praha`
+ `postalCode`: `12000`
+ `countryCode`: `CZ`

## Billing info (object)
+ `subject`: `Odbav.to`
+ `subjectId`: `12345`
+ `subjectVatId`: `CZ12345`
+ `street`: `Anonymous 123`
+ `city`: `Prague`
+ `countryCode`: `CZ`
+ `postalCode`: `11000`
+ `accountOwner`: `VIC`
+ `accountNo`: `233432765`
+ `bankCode`: `0600`
+ `iban`: `CZ6508000000192000145399`
+ `swiftbic`: `SWIFTBIC`

## Translation (object)
+ `key`: `hello-world`
+ `translation`: `Lorem ipsum dolor sit amet`

## Guest (User)
+ `phone`: `+420123123123`
+ `companyName`: `Odbav.to`
+ `companyId`: `12345`
+ `companyVatId`: `CZ12345`
+ `street`: `Anonymous 123`
+ `city`: `Prague`
+ `countryCode`: `CZ`
+ `postalCode`: `11000`

## Ticket id (object)
+ `id`: `86cc42db-b22e-4005-99eb-6faf03b41aea`

## Ticket (object)
+ `code`: `c084806e45e5`
+ `price` (Price)
+ `event`
    + `id`: `6bd945c3-8a3e-4e1a-9fd3-2b6a0291eaba`
    + `name`: `Some event`
    + `variant`
        + `id`: `fed4cb08-2a18-446e-b549-d9e0f768f658`
        + `name`: `Some ticket variant`
+ `guest` (Guest)

## Ticket editation (object)
+ `ticketVariant`: `fed4cb08-2a18-446e-b549-d9e0f768f658`
+ Include Guest
+ `price` (Price)

## Ticket with id (object)
+ Include Ticket id
+ Include Ticket

## Event day (object)
+ `start`: `2017-03-01 08:00:00`
+ `end`: `2017-03-01 20:00:00`

## Event day 2 (object)
+ `start`: `2017-03-02 06:00:00`
+ `end`: `2017-03-02 15:00:00`

## Event bounds (object)
+ `north`: `49.209889999` (number)
+ `east`: `16.603493699999945` (number)
+ `south`: `49.2098176` (number)
+ `west`: `16.603102900000067` (number)

## Event location (object)
+ `fullAddress`: `Anonymous 123, Prague 11000, Czech Republic`
+ `street`: `Anonymous 123`
+ `city`: `Prague`
+ `countryCode`: `CZ`
+ `postalCode`: `11000`
+ `lat`: `49.2098` (number)
+ `lng`: `16.603` (number)
+ `bounds` (Event bounds)

## Event body (object)
+ `name`: `Some awesome event!`
+ `placeName`: `Event venue`
+ `location` (Event location)
+ `days` (array[Event day, Event day 2])
+ `organizer`: `ABC promoting ltd`
+ `description`: `Neat description`
+ `link`: `http://odbav.to/tickets/events`

## Event id (object)
+ `id`: `acd2d642-3a72-49ef-9c1b-6b248715f8ce`

## Event with variants (object)
+ Include Event body
+ `variants` (array[Ticket variant])

## Event with id (object)
+ Include Event id
+ Include Event body

## Event with id and variants (Event with id)
+ `variants` (array[Ticket variant with id])

## Order ticket (object)
+ `variant`:  `5f470e02-3442-488a-9c2c-804e16520e44`
+ `currency`: `CZK`

## Order ticket with event info (object)
+ Include Ticket id
+ `code`: `c084806e45e5`
+ `variant`
    + `id`: `5f470e02-3442-488a-9c2c-804e16520e44`
    + `name`: `Some variant name`
    + `price` (Price)
    + `event`
        + Include Event id
        + `name`: `Some event name`

## Order (object)
+ Include Guest

## Order with id (object)
+ `id`: `7c9a8379-8fba-48d9-b5b6-146b4083e01f`
+ Include Order

## Order with id and ticket variant info
+ `id`: `7c9a8379-8fba-48d9-b5b6-146b4083e01f`
+ Include Guest
+ `price` (Price)
+ `tickets` (array[Order ticket with event info])

## Ticket variant (object)
+ `name`: `Some ticket variant`
+ `prices` (array[Price, Price 2])
+ `amount`: `1000` (number)
+ `amountLimited`: `true` (boolean)
+ `sold`: `23` (number)
+ `public`: `true` (boolean)
+ `validDays` (array[Event day, Event day 2])
+ `img`: `/path/to/img`

## Ticket variant id (object)
+ `id`: `fed4cb08-2a18-446e-b549-d9e0f768f658`

## Ticket variant with id (object)
+ Include Ticket variant id
+ Include Ticket variant

## Form type (object)
+ `type`: `input`
+ `fieldName: `lorem ipsum`
+ `type`: `text`
+ `toggled`: `false`

## Error (object)
+ `title`: `Short title of the problem`
+ `detail`: `I guess something went wrong, description of error goes here`

## 400 Error (Error)
+ source (object)
    + `pointer`
    + `parameter`

## 400 Error response (object)
+ errors (array[400 Error, 400 Error])

## 401 Error response (object)
+ errors (array[Error])

## 404 Error response (object)
+ errors (array[Error])